package _Java8._Глава_14._Глава_14_397_обобщения;
/*
Простой обобщённый класс. Здесь Т обозначает параметр типа, который будет заменён
реальным типом при создании объекта типа Gen
 */
public class Gen<A> {
    A ob; // объявить объект типа Т
    // передать конструктору ссылку на объект типа Т
    Gen(A a) {
        ob = a;
    }
    // возвратить объект ob
    A getOb() {
        return ob;
    }
    // показать тип Т
    void showType() {
        System.out.println("Типом Т является " + ob.getClass().getName());
    }
}
// Продемонстрировать применение обобщённого класса
class GenDemo {
    public static void main(String[] args) {
        // Создать ссылку типа Gen для целых чисел
        Gen<Integer> iOb;
        /*
        Создать объект типа Gen<Integer> и присвоить ссылку на него переменной iOb.
        Обратите внимание на применение автоупаковки для инкапсцляции значения 88 в
        объекте типа Integer
         */
        iOb = new Gen<Integer>(88);
        // показать тип данных, хранящихся в переменной iOb
        iOb.showType();
        // получить значение переменной iOb. Обратите внимание на то, что для этого не
        // требуется никакого приведения типов
        int v = iOb.getOb();
        System.out.println("Значение: " + v);
        System.out.println();
        // создать объект типа Gen для символьных строк
        Gen<String> strOb = new Gen<String>("Тест обобщений");
        // Показать тип данных, хранящихся в переменной strOb
        strOb.showType();
        // Получить значение переменной strOb. Ив этом случае приведение типов не
        // требуется
        String str = strOb.getOb();
        System.out.println("Значение: " + str);
    }
}
